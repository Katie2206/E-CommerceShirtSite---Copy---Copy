{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\E-CommerceShirtSite - Copy\\\\client\\\\src\\\\components\\\\DisplayAllProduct.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProductTable from \"./ProductTable\";\nimport Logout from \"./Logout\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\";\nimport ProductTableRow from \"./ProductTableRow\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\nexport default class DisplayAllProduct extends Component {\n  constructor(props) {\n    super(props); // const coloursAvailable = this.generateColoursAvailable(props.products)\n\n    this.state = {\n      products: [],\n      isChecked: {\n        colours: {\n          red: \"Red\",\n          orange: \"Orange\",\n          yellow: \"Yellow\",\n          green: \"Green\",\n          blue: \"Blue\",\n          purple: \"Purple\",\n          pink: \"Pink\",\n          black: \"Black\",\n          white: \"White\",\n          grey: \"Grey\",\n          brown: \"Brown\",\n          multiple: \"Multiple\"\n        }\n      }\n    };\n  } // generateColoursAvailable = (products) => {\n  //     // const colour = product.colour\n  //     const coloursAvailable = products.map((product) => {const colour = product.colour\n  //     if(!coloursAvailable[colour]){\n  //         coloursAvailable[colour] = false\n  //     }\n  //\n  //     })\n  //     return coloursAvailable\n  // }\n\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Product read\");\n          this.setState({\n            products: res.data\n          });\n        }\n      } else {\n        console.log(\"Product not found\");\n      }\n    });\n  } // handleColourCheckBoxChange = (attribute) => {\n  //     this.setState((prevState) => ({\n  //         isChecked: {\n  //             ...prevState.isChecked,\n  //             colours: {\n  //                 ...prevState.isChecked.colours,\n  //                 [attribute]: !prevState.isChecked.colours[attribute]\n  //             }\n  //         }\n  //     }))\n  // }\n  //\n  // applyFilters = () => {\n  //     let filteredProducts = [...this.state.products]\n  //\n  //     const colourFilters = this.state.isChecked.colours;\n  //\n  //     for (const colour in colourFilters) {\n  //         if (colourFilters[colour] === true) {\n  //             filteredProducts = filteredProducts.filter((product) =>\n  //                 product.colour === colour\n  //             )\n  //         }\n  //     }\n  //\n  //     console.log(filteredProducts)\n  //     return filteredProducts\n  // }\n\n\n  render() {\n    // let filteredProducts = this.applyFilters();\n    // console.log(filteredProducts)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Red\"), React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ProductTable, {\n      products: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? React.createElement(\"div\", {\n      className: \"add-new-products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/AddProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Add New Product\")) : null)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\E-CommerceShirtSite - Copy\\client\\src\\components\\DisplayAllProduct.js"],"names":["React","Component","Link","axios","ProductTable","Logout","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","SERVER_HOST","ProductTableRow","Sidebar","Navbar","DisplayAllProduct","constructor","props","state","products","isChecked","colours","red","orange","yellow","green","blue","purple","pink","black","white","grey","brown","multiple","componentDidMount","get","then","res","data","errorMessage","console","log","setState","render","product","localStorage","accessLevel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport ProductTable from \"./ProductTable\"\nimport Logout from \"./Logout\"\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\"\nimport ProductTableRow from \"./ProductTableRow\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\n\nexport default class DisplayAllProduct extends Component {\n    constructor(props) {\n        super(props);\n        // const coloursAvailable = this.generateColoursAvailable(props.products)\n        this.state = {\n            products: [],\n            isChecked: {\n                colours: {\n                    red: \"Red\",\n                    orange: \"Orange\",\n                    yellow: \"Yellow\",\n                    green: \"Green\",\n                    blue: \"Blue\",\n                    purple: \"Purple\",\n                    pink: \"Pink\",\n                    black: \"Black\",\n                    white: \"White\",\n                    grey: \"Grey\",\n                    brown: \"Brown\",\n                    multiple: \"Multiple\"\n                }\n            }\n        }\n    }\n\n    // generateColoursAvailable = (products) => {\n    //     // const colour = product.colour\n    //     const coloursAvailable = products.map((product) => {const colour = product.colour\n    //     if(!coloursAvailable[colour]){\n    //         coloursAvailable[colour] = false\n    //     }\n    //\n    //     })\n    //     return coloursAvailable\n    // }\n\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/products`).then((res) => {\n            if (res.data) {\n                if (res.data.errorMessage) {\n                    console.log(res.data.errorMessage)\n                } else {\n                    console.log(\"Product read\")\n                    this.setState({ products: res.data })\n                }\n            } else {\n                console.log(\"Product not found\")\n            }\n        })\n    }\n\n    // handleColourCheckBoxChange = (attribute) => {\n    //     this.setState((prevState) => ({\n    //         isChecked: {\n    //             ...prevState.isChecked,\n    //             colours: {\n    //                 ...prevState.isChecked.colours,\n    //                 [attribute]: !prevState.isChecked.colours[attribute]\n    //             }\n    //         }\n    //     }))\n    // }\n    //\n    // applyFilters = () => {\n    //     let filteredProducts = [...this.state.products]\n    //\n    //     const colourFilters = this.state.isChecked.colours;\n    //\n    //     for (const colour in colourFilters) {\n    //         if (colourFilters[colour] === true) {\n    //             filteredProducts = filteredProducts.filter((product) =>\n    //                 product.colour === colour\n    //             )\n    //         }\n    //     }\n    //\n    //     console.log(filteredProducts)\n    //     return filteredProducts\n    // }\n\n    render() {\n       // let filteredProducts = this.applyFilters();\n       // console.log(filteredProducts)\n        return (\n            <div>\n                <Navbar/>\n                <Sidebar/>\n                <p>Red</p>\n                {/*<input*/}\n                {/*    id={\"Red\"}*/}\n                {/*    type=\"checkbox\"*/}\n                {/*    checked={this.state.isChecked.colours.red}*/}\n                {/*    onChange={() => this.handleColourCheckBoxChange()}*/}\n                {/*/>*/}\n            <div className=\"form-container\">\n\n                {/*{localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (*/}\n                {/*    <div className=\"logout\">*/}\n                {/*        <Logout />*/}\n                {/*    </div>*/}\n                {/*) : (*/}\n                {/*    <div>*/}\n                {/*        <Link className=\"green-button\" to={\"/Login\"}>*/}\n                {/*            Login*/}\n                {/*        </Link>*/}\n                {/*        <Link className=\"blue-button\" to={\"/Register\"}>*/}\n                {/*            Register*/}\n                {/*        </Link>*/}\n                {/*        /!*<Link className=\"red-button\" to={\"/ShoppingCart\"}>*!/*/}\n                {/*        /!*    Shopping Cart*!/*/}\n                {/*        /!*</Link>*!/*/}\n                {/*    </div>*/}\n                {/*)}*/}\n                <div className=\"table-container\">\n                    <ProductTable products={product} />\n                    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? (\n                        <div className=\"add-new-products\">\n                            <Link className=\"blue-button\" to={\"/AddProduct\"}>\n                                Add New Product\n                            </Link>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}