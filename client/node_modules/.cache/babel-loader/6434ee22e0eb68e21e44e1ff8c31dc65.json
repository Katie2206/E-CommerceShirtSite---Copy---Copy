{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\E-CommerceShirtSite - Copy\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\E-CommerceShirtSite - Copy\\\\client\\\\src\\\\components\\\\DisplayAllProduct.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProductTable from \"./ProductTable\";\nimport Logout from \"./Logout\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\";\nimport ProductTableRow from \"./ProductTableRow\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\nexport default class DisplayAllProduct extends Component {\n  constructor(props) {\n    super(props); // const coloursAvailable = this.generateColoursAvailable(props.products)\n\n    this.handleColourCheckBoxChange = attribute => {\n      this.setState(prevState => ({\n        isChecked: _objectSpread({}, prevState.isChecked, {\n          colours: _objectSpread({}, prevState.isChecked.colours, {\n            [attribute]: !prevState.isChecked.colours[attribute]\n          })\n        })\n      }));\n    };\n\n    this.applyFilters = () => {\n      let filteredProducts = [...this.state.products];\n      const colourFilters = this.state.isChecked.colours;\n\n      for (const colour in colourFilters) {\n        if (colourFilters[colour] === true) {\n          filteredProducts = filteredProducts.filter(product => product.colour === colour);\n        }\n      }\n\n      console.log(filteredProducts);\n      return filteredProducts;\n    };\n\n    this.state = {\n      products: [],\n      isChecked: {\n        colours: {\n          red: \"Red\",\n          orange: \"Orange\",\n          yellow: \"Yellow\",\n          green: \"Green\",\n          blue: \"Blue\",\n          purple: \"Purple\",\n          pink: \"Pink\",\n          black: \"Black\",\n          white: \"White\",\n          grey: \"Grey\",\n          brown: \"Brown\",\n          multiple: \"Multiple\"\n        },\n        productSize: {}\n      }\n    };\n  } // generateColoursAvailable = (products) => {\n  //     // const colour = product.colour\n  //     const coloursAvailable = products.map((product) => {const colour = product.colour\n  //     if(!coloursAvailable[colour]){\n  //         coloursAvailable[colour] = false\n  //     }\n  //\n  //     })\n  //     return coloursAvailable\n  // }\n\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Product read\");\n          const productSize = res.data.map(product => {\n            return product.size;\n          });\n          const productColour = res.data.map(product => {\n            return product.colour;\n          }); // console.log(\"productSize: \", productSize)\n\n          console.log(\"productColour: \", productColour);\n          this.setState({\n            products: res.data\n          });\n        }\n      } else {\n        console.log(\"Product not found\");\n      }\n    });\n  }\n\n  render() {\n    let filteredProducts = this.applyFilters();\n    console.log(filteredProducts);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Red\"), React.createElement(\"input\", {\n      id: \"Red\",\n      type: \"checkbox\",\n      checked: this.state.isChecked.colours.red,\n      onChange: () => this.handleColourCheckBoxChange(\"Red\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(ProductTable, {\n      products: filteredProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? React.createElement(\"div\", {\n      className: \"add-new-products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/AddProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Add New Product\")) : null)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\E-CommerceShirtSite - Copy\\client\\src\\components\\DisplayAllProduct.js"],"names":["React","Component","Link","axios","ProductTable","Logout","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","SERVER_HOST","ProductTableRow","Sidebar","Navbar","DisplayAllProduct","constructor","props","handleColourCheckBoxChange","attribute","setState","prevState","isChecked","colours","applyFilters","filteredProducts","state","products","colourFilters","colour","filter","product","console","log","red","orange","yellow","green","blue","purple","pink","black","white","grey","brown","multiple","productSize","componentDidMount","get","then","res","data","errorMessage","map","size","productColour","render","localStorage","accessLevel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport ProductTable from \"./ProductTable\"\nimport Logout from \"./Logout\"\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\"\nimport ProductTableRow from \"./ProductTableRow\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\n\nexport default class DisplayAllProduct extends Component {\n    constructor(props) {\n        super(props);\n        // const coloursAvailable = this.generateColoursAvailable(props.products)\n        this.state = {\n            products: [],\n            isChecked: {\n                colours: {\n                    red: \"Red\",\n                    orange: \"Orange\",\n                    yellow: \"Yellow\",\n                    green: \"Green\",\n                    blue: \"Blue\",\n                    purple: \"Purple\",\n                    pink: \"Pink\",\n                    black: \"Black\",\n                    white: \"White\",\n                    grey: \"Grey\",\n                    brown: \"Brown\",\n                    multiple: \"Multiple\"\n                },\n                productSize:{\n\n                }\n            }\n        }\n    }\n\n    // generateColoursAvailable = (products) => {\n    //     // const colour = product.colour\n    //     const coloursAvailable = products.map((product) => {const colour = product.colour\n    //     if(!coloursAvailable[colour]){\n    //         coloursAvailable[colour] = false\n    //     }\n    //\n    //     })\n    //     return coloursAvailable\n    // }\n\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/products`).then((res) => {\n            if (res.data) {\n                if (res.data.errorMessage) {\n                    console.log(res.data.errorMessage)\n                } else {\n                    console.log(\"Product read\")\n                    const productSize = res.data.map(product => {\n                        return product.size\n                    })\n                    const productColour = res.data.map(product => {\n                        return product.colour\n                    })\n                    // console.log(\"productSize: \", productSize)\n                    console.log(\"productColour: \", productColour)\n                    this.setState({ products: res.data })\n                }\n\n            } else {\n                console.log(\"Product not found\")\n            }\n        })\n    }\n\n    handleColourCheckBoxChange = (attribute) => {\n        this.setState((prevState) => ({\n            isChecked: {\n                ...prevState.isChecked,\n                colours: {\n                    ...prevState.isChecked.colours,\n                    [attribute]: !prevState.isChecked.colours[attribute]\n                }\n            }\n        }))\n    }\n\n    applyFilters = () => {\n        let filteredProducts = [...this.state.products]\n\n        const colourFilters = this.state.isChecked.colours;\n\n        for (const colour in colourFilters) {\n            if (colourFilters[colour] === true) {\n                filteredProducts = filteredProducts.filter((product) =>\n                    product.colour === colour\n                )\n            }\n        }\n\n        console.log(filteredProducts)\n        return filteredProducts\n    }\n\n    render() {\n       let filteredProducts = this.applyFilters();\n       console.log(filteredProducts)\n        return (\n            <div>\n                <Navbar/>\n                <Sidebar/>\n            <div className=\"form-container\">\n                {/*{localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (*/}\n                {/*    <div className=\"logout\">*/}\n                {/*        <Logout />*/}\n                {/*    </div>*/}\n                {/*) : (*/}\n                {/*    <div>*/}\n                {/*        <Link className=\"green-button\" to={\"/Login\"}>*/}\n                {/*            Login*/}\n                {/*        </Link>*/}\n                {/*        <Link className=\"blue-button\" to={\"/Register\"}>*/}\n                {/*            Register*/}\n                {/*        </Link>*/}\n                {/*        /!*<Link className=\"red-button\" to={\"/ShoppingCart\"}>*!/*/}\n                {/*        /!*    Shopping Cart*!/*/}\n                {/*        /!*</Link>*!/*/}\n                {/*    </div>*/}\n                {/*)}*/}\n                <div className=\"table-container\">\n                    <p>Red</p>\n                    <input\n                        id={\"Red\"}\n                        type=\"checkbox\"\n                        checked={this.state.isChecked.colours.red}\n                        onChange={() => this.handleColourCheckBoxChange(\"Red\")}\n                    />\n                    <ProductTable products={filteredProducts} />\n                    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? (\n                        <div className=\"add-new-products\">\n                            <Link className=\"blue-button\" to={\"/AddProduct\"}>\n                                Add New Product\n                            </Link>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}