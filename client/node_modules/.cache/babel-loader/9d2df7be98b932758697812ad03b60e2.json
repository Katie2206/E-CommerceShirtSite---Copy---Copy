{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\E-CommerceShirtSite - Copy\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\E-CommerceShirtSite - Copy\\\\client\\\\src\\\\components\\\\DisplayAllCustomers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProductTable from \"./ProductTable\";\nimport Logout from \"./Logout\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\";\nimport ProductTableRow from \"./ProductTableRow\";\nimport Sizes from \"./Sizes\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\nexport default class DisplayAllProduct extends Component {\n  constructor(props) {\n    super(props); // const coloursAvailable = this.generateColoursAvailable(props.products)\n\n    this.handleColourCheckBoxChange = attribute => {\n      this.setState(prevState => ({\n        isChecked: _objectSpread({}, prevState.isChecked, {\n          colours: _objectSpread({}, prevState.isChecked.colours, {\n            [attribute]: !prevState.isChecked.colours[attribute]\n          })\n        })\n      }));\n    };\n\n    this.applyFilters = () => {\n      let filteredProducts = [...this.state.products];\n      const colourFilters = this.state.isChecked.colours;\n\n      for (const colour in colourFilters) {\n        if (colourFilters[colour] === true) {\n          filteredProducts = filteredProducts.filter(product => product.colour === colour);\n        }\n      }\n\n      console.log(filteredProducts);\n      return filteredProducts;\n    };\n\n    this.state = {\n      products: [],\n      isChecked: {\n        colours: {\n          red: \"Red\",\n          orange: \"Orange\",\n          yellow: \"Yellow\",\n          green: \"Green\",\n          blue: \"Blue\",\n          purple: \"Purple\",\n          pink: \"Pink\",\n          black: \"Black\",\n          white: \"White\",\n          grey: \"Grey\",\n          brown: \"Brown\",\n          multiple: \"Multiple\"\n        },\n        productSize: {}\n      }\n    };\n  } // generateColoursAvailable = (products) => {\n  //     // const colour = product.colour\n  //     const coloursAvailable = products.map((product) => {const colour = product.colour\n  //     if(!coloursAvailable[colour]){\n  //         coloursAvailable[colour] = false\n  //     }\n  //\n  //     })\n  //     return coloursAvailable\n  // }\n\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Product read\");\n          const individualSizes = [...new Set(res.data.map(product => product.size))]; // const productSize = res.data.map(product => {\n          //     return product.size\n          // })\n          // const productColour = res.data.map(product => {\n          //     return product.colour\n          // })\n\n          console.log(\"individualSizes: \", individualSizes); // console.log(\"productColour: \", productColour)\n\n          this.setState({\n            products: res.data\n          });\n        }\n      } else {\n        console.log(\"Product not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(CustomerProfileDisplay, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? React.createElement(\"div\", {\n      className: \"add-new-products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/AddProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Add New Product\")) : null)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\E-CommerceShirtSite - Copy\\client\\src\\components\\DisplayAllCustomers.js"],"names":["React","Component","Link","axios","ProductTable","Logout","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","SERVER_HOST","ProductTableRow","Sizes","Sidebar","Navbar","DisplayAllProduct","constructor","props","handleColourCheckBoxChange","attribute","setState","prevState","isChecked","colours","applyFilters","filteredProducts","state","products","colourFilters","colour","filter","product","console","log","red","orange","yellow","green","blue","purple","pink","black","white","grey","brown","multiple","productSize","componentDidMount","get","then","res","data","errorMessage","individualSizes","Set","map","size","render","users","localStorage","accessLevel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport ProductTable from \"./ProductTable\"\r\nimport Logout from \"./Logout\"\r\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\"\r\nimport ProductTableRow from \"./ProductTableRow\";\r\nimport Sizes from \"./Sizes\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nexport default class DisplayAllProduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // const coloursAvailable = this.generateColoursAvailable(props.products)\r\n        this.state = {\r\n            products: [],\r\n            isChecked: {\r\n                colours: {\r\n                    red: \"Red\",\r\n                    orange: \"Orange\",\r\n                    yellow: \"Yellow\",\r\n                    green: \"Green\",\r\n                    blue: \"Blue\",\r\n                    purple: \"Purple\",\r\n                    pink: \"Pink\",\r\n                    black: \"Black\",\r\n                    white: \"White\",\r\n                    grey: \"Grey\",\r\n                    brown: \"Brown\",\r\n                    multiple: \"Multiple\"\r\n                },\r\n                productSize:{\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // generateColoursAvailable = (products) => {\r\n    //     // const colour = product.colour\r\n    //     const coloursAvailable = products.map((product) => {const colour = product.colour\r\n    //     if(!coloursAvailable[colour]){\r\n    //         coloursAvailable[colour] = false\r\n    //     }\r\n    //\r\n    //     })\r\n    //     return coloursAvailable\r\n    // }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${SERVER_HOST}/products`).then((res) => {\r\n            if (res.data) {\r\n                if (res.data.errorMessage) {\r\n                    console.log(res.data.errorMessage)\r\n                } else {\r\n                    console.log(\"Product read\")\r\n                    const individualSizes = [...new Set(res.data.map(product => product.size))]\r\n                    // const productSize = res.data.map(product => {\r\n                    //     return product.size\r\n                    // })\r\n                    // const productColour = res.data.map(product => {\r\n                    //     return product.colour\r\n                    // })\r\n                    console.log(\"individualSizes: \", individualSizes)\r\n                    // console.log(\"productColour: \", productColour)\r\n                    this.setState({ products: res.data })\r\n                }\r\n\r\n            } else {\r\n                console.log(\"Product not found\")\r\n            }\r\n        })\r\n    }\r\n\r\n    handleColourCheckBoxChange = (attribute) => {\r\n        this.setState((prevState) => ({\r\n            isChecked: {\r\n                ...prevState.isChecked,\r\n                colours: {\r\n                    ...prevState.isChecked.colours,\r\n                    [attribute]: !prevState.isChecked.colours[attribute]\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    applyFilters = () => {\r\n        let filteredProducts = [...this.state.products]\r\n\r\n        const colourFilters = this.state.isChecked.colours;\r\n\r\n        for (const colour in colourFilters) {\r\n            if (colourFilters[colour] === true) {\r\n                filteredProducts = filteredProducts.filter((product) =>\r\n                    product.colour === colour\r\n                )\r\n            }\r\n        }\r\n\r\n        console.log(filteredProducts)\r\n        return filteredProducts\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Sidebar/>\r\n                <CustomerProfileDisplay users={this.state.users} />\r\n                <div className=\"form-container\">\r\n                    <div className=\"table-container\">\r\n                        {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? (\r\n                            <div className=\"add-new-products\">\r\n                                <Link className=\"blue-button\" to={\"/AddProduct\"}>\r\n                                    Add New Product\r\n                                </Link>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}